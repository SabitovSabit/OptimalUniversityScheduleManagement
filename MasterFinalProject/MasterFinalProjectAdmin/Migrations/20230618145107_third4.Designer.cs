// <auto-generated />
using System;
using MasterFinalProjectAdmin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterFinalProjectAdmin.Migrations
{
    [DbContext(typeof(SchoolDb))]
    [Migration("20230618145107_third4")]
    partial class third4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.ClassName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("KafedraId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("KafedraId");

                    b.ToTable("ClassNames");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.ClassRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassNameId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassNameId");

                    b.HasIndex("RoomId");

                    b.ToTable("ClassRooms");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.ClassSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassNameId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassNameId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ClassSubjects");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.ClassTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassNameId")
                        .HasColumnType("int");

                    b.Property<int?>("ClassNameId1")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassNameId");

                    b.HasIndex("ClassNameId1");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TeacherId1");

                    b.ToTable("ClassTeachers");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.DayClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassNameId")
                        .HasColumnType("int");

                    b.Property<int?>("ClassNameId1")
                        .HasColumnType("int");

                    b.Property<int>("DaysId")
                        .HasColumnType("int");

                    b.Property<int?>("DaysId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassNameId");

                    b.HasIndex("ClassNameId1");

                    b.HasIndex("DaysId");

                    b.HasIndex("DaysId1");

                    b.ToTable("DayClasses");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Days", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Kafedra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Kafedras");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassNameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ClassNameId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.SubjectKafedra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("KafedraId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KafedraId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectKafedras");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("KafedraId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("KafedraId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.TeacherSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.TimeClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassNameId")
                        .HasColumnType("int");

                    b.Property<int?>("ClassNameId1")
                        .HasColumnType("int");

                    b.Property<int>("TimeOfDayId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeOfDayId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassNameId");

                    b.HasIndex("ClassNameId1");

                    b.HasIndex("TimeOfDayId");

                    b.HasIndex("TimeOfDayId1");

                    b.ToTable("TimeClasses");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.TimeClassDayClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DayClassId")
                        .HasColumnType("int");

                    b.Property<int?>("DayClassId1")
                        .HasColumnType("int");

                    b.Property<int>("TimeClassId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeClassId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DayClassId");

                    b.HasIndex("DayClassId1");

                    b.HasIndex("TimeClassId");

                    b.HasIndex("TimeClassId1");

                    b.ToTable("TimeClassDayClasses");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.TimeDayClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassNameId")
                        .HasColumnType("int");

                    b.Property<int>("DaysId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("RoomId");

                    b.Property<int?>("RoomId1")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectId");

                    b.Property<int?>("SubjectId1")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("TeacherId");

                    b.Property<int?>("TeacherId1")
                        .HasColumnType("int");

                    b.Property<int>("TimeOfDayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassNameId");

                    b.HasIndex("DaysId");

                    b.HasIndex("RoomId");

                    b.HasIndex("RoomId1");

                    b.HasIndex("SubjectId");

                    b.HasIndex("SubjectId1");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TeacherId1");

                    b.HasIndex("TimeOfDayId");

                    b.ToTable("TimeDayClasses");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.TimeOfDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TimeOfDays");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.ClassName", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.Kafedra", "Kafedra")
                        .WithMany("ClassNames")
                        .HasForeignKey("KafedraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kafedra");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.ClassRoom", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.ClassName", "ClassName")
                        .WithMany("ClassRooms")
                        .HasForeignKey("ClassNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.Room", "Room")
                        .WithMany("ClassRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassName");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.ClassSubject", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.ClassName", "ClassName")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("ClassNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.Subject", "Subject")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassName");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.ClassTeacher", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.ClassName", "ClassName")
                        .WithMany()
                        .HasForeignKey("ClassNameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.ClassName", null)
                        .WithMany("ClassTeachers")
                        .HasForeignKey("ClassNameId1");

                    b.HasOne("MasterFinalProjectAdmin.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.Teacher", null)
                        .WithMany("ClassTeachers")
                        .HasForeignKey("TeacherId1");

                    b.Navigation("ClassName");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.DayClass", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.ClassName", "ClassName")
                        .WithMany()
                        .HasForeignKey("ClassNameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.ClassName", null)
                        .WithMany("DayClasses")
                        .HasForeignKey("ClassNameId1");

                    b.HasOne("MasterFinalProjectAdmin.Models.Days", "Days")
                        .WithMany()
                        .HasForeignKey("DaysId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.Days", null)
                        .WithMany("DayClasses")
                        .HasForeignKey("DaysId1");

                    b.Navigation("ClassName");

                    b.Navigation("Days");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Kafedra", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.Faculty", "Faculty")
                        .WithMany("Kafedras")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Student", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.ClassName", "ClassName")
                        .WithMany("Students")
                        .HasForeignKey("ClassNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassName");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.SubjectKafedra", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.Kafedra", "Kafedra")
                        .WithMany()
                        .HasForeignKey("KafedraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kafedra");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Teacher", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.Kafedra", "Kafedra")
                        .WithMany("Teachers")
                        .HasForeignKey("KafedraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kafedra");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.TeacherSubject", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.TimeClass", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.ClassName", "ClassName")
                        .WithMany()
                        .HasForeignKey("ClassNameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.ClassName", null)
                        .WithMany("TimeClasses")
                        .HasForeignKey("ClassNameId1");

                    b.HasOne("MasterFinalProjectAdmin.Models.TimeOfDay", "TimeOfDay")
                        .WithMany()
                        .HasForeignKey("TimeOfDayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.TimeOfDay", null)
                        .WithMany("TimeClasses")
                        .HasForeignKey("TimeOfDayId1");

                    b.Navigation("ClassName");

                    b.Navigation("TimeOfDay");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.TimeClassDayClass", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.DayClass", "DayClass")
                        .WithMany()
                        .HasForeignKey("DayClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.DayClass", null)
                        .WithMany("TimeClassDayClasses")
                        .HasForeignKey("DayClassId1");

                    b.HasOne("MasterFinalProjectAdmin.Models.TimeClass", "TimeClass")
                        .WithMany()
                        .HasForeignKey("TimeClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.TimeClass", null)
                        .WithMany("TimeClassDayClasses")
                        .HasForeignKey("TimeClassId1");

                    b.Navigation("DayClass");

                    b.Navigation("TimeClass");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.TimeDayClass", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.ClassName", "ClassName")
                        .WithMany("TimeDayClasses")
                        .HasForeignKey("ClassNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.Days", "Days")
                        .WithMany("TimeDayClasses")
                        .HasForeignKey("DaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.Room", null)
                        .WithMany("TimeDayClasses")
                        .HasForeignKey("RoomId1");

                    b.HasOne("MasterFinalProjectAdmin.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.Subject", null)
                        .WithMany("TimeDayClasses")
                        .HasForeignKey("SubjectId1");

                    b.HasOne("MasterFinalProjectAdmin.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.Teacher", null)
                        .WithMany("TimeDayClasses")
                        .HasForeignKey("TeacherId1");

                    b.HasOne("MasterFinalProjectAdmin.Models.TimeOfDay", "TimeOfDay")
                        .WithMany("TimeDayClasses")
                        .HasForeignKey("TimeOfDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassName");

                    b.Navigation("Days");

                    b.Navigation("Room");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");

                    b.Navigation("TimeOfDay");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterFinalProjectAdmin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MasterFinalProjectAdmin.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.ClassName", b =>
                {
                    b.Navigation("ClassRooms");

                    b.Navigation("ClassSubjects");

                    b.Navigation("ClassTeachers");

                    b.Navigation("DayClasses");

                    b.Navigation("Students");

                    b.Navigation("TimeClasses");

                    b.Navigation("TimeDayClasses");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.DayClass", b =>
                {
                    b.Navigation("TimeClassDayClasses");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Days", b =>
                {
                    b.Navigation("DayClasses");

                    b.Navigation("TimeDayClasses");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Faculty", b =>
                {
                    b.Navigation("Kafedras");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Kafedra", b =>
                {
                    b.Navigation("ClassNames");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Room", b =>
                {
                    b.Navigation("ClassRooms");

                    b.Navigation("TimeDayClasses");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Subject", b =>
                {
                    b.Navigation("ClassSubjects");

                    b.Navigation("TeacherSubjects");

                    b.Navigation("TimeDayClasses");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.Teacher", b =>
                {
                    b.Navigation("ClassTeachers");

                    b.Navigation("TimeDayClasses");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.TimeClass", b =>
                {
                    b.Navigation("TimeClassDayClasses");
                });

            modelBuilder.Entity("MasterFinalProjectAdmin.Models.TimeOfDay", b =>
                {
                    b.Navigation("TimeClasses");

                    b.Navigation("TimeDayClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
